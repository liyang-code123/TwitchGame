{"version":3,"sources":["utils.js","components/Login.js","components/Register.js","components/Favorites.js","components/CustomSearch.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["SERVER_ORIGIN","loginUrl","login","credential","fetch","method","header","credentials","body","JSON","stringify","then","response","status","Error","json","registerUrl","register","data","headers","topGamesUrl","getTopGames","getGameDetailsUrl","searchGameByIdUrl","searchGameById","gameId","searchGameByName","gameName","getGameDetails","id","favoriteItemUrl","getFavoriteItem","getRecommendedItemsUrl","getRecommendations","Login","state","displayModel","onFinish","values","console","log","res","setState","props","onSuccess","message","success","name","catch","err","error","signinOnClick","handleCancel","this","shape","onClick","style","marginRight","title","visible","onCancel","footer","destroyOnClass","preserve","Item","rules","required","prefix","UserOutlined","className","placeholder","LockOutlined","type","htmlType","Component","Register","displayModal","signupOnClick","SubMenu","Menu","MenuKey","Favorites","displayDrawer","onDrawerClose","onFavoriteClick","VIDEO","STREAM","CLIP","icon","StarFilled","placement","width","onClose","mode","defaultOpenKeys","height","borderRight","selectable","EyeOutlined","map","item","href","url","target","rel","broadcaster_name","YoutubeOutlined","VideoCameraOutlined","CustomSearch","searchOnClick","onSubmit","game_name","SearchOutlined","marginLeft","marginTop","TabPane","Tabs","tabKeys","renderCardTitle","loggedIn","favs","favOnChange","isFav","find","fav","StarOutlined","favItem","favorite","addFavoriteItem","overflow","textOverflow","renderCardGrid","grid","xs","sm","md","lg","xl","dataSource","renderItem","alt","src","thumbnail_url","replace","Home","resources","favoriteItems","favoriteOnChange","favVideos","favStreams","favClips","defaultActiveKey","tab","forceRender","Header","Layout","Sider","Content","App","topGames","componentDidMount","signinOnSuccess","customSearchOnSuccess","onGameSelect","key","justify","signoutOnClick","display","onSelect","LikeOutlined","FireOutlined","game","box_art_url","borderRadius","padding","margin","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be35d3e4.chunk.js","sourcesContent":["const SERVER_ORIGIN = '';\n\n// login api\nconst loginUrl = `${SERVER_ORIGIN}/login`;\n// credential is username + password\nexport const login = (credential) => {\n    return fetch(loginUrl, {\n        method: 'POST',\n        header : {\n            'Content-Type' : 'application/json',\n        },\n        credentials: 'include',\n        body : JSON.stringify(credential)\n    }).then(response => {\n        if(response.status !== 200) {\n            throw Error('Fail to login');\n        }\n        return response.json();\n    })\n}\n\n// register api\nconst registerUrl = `${SERVER_ORIGIN}/register`;\n\nexport const register = (data) => {\n    return fetch(registerUrl, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to register');\n        }\n    })\n}\n\n// logout api\nconst logoutUrl = `${SERVER_ORIGIN}/logout`;\n\nexport const logout = () => {\n    return fetch(logoutUrl, {\n        method: 'POST',\n        credentials: 'include',\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to log out');\n        }\n    })\n}\n\n// topGame api\nconst topGamesUrl = `${SERVER_ORIGIN}/game`;\n\nexport const getTopGames = () => {\n    return fetch(topGamesUrl).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to get top games');\n        }\n\n        return response.json();\n    })\n}\n\n// getGameDetail api\nconst getGameDetailsUrl = `${SERVER_ORIGIN}/game?game_name=`;\n\nconst getGameDetails = (gameName) => {\n    return fetch(`${getGameDetailsUrl}${gameName}`).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to find the game');\n        }\n\n        return response.json();\n    });\n}\n\n// search api\nconst searchGameByIdUrl = `${SERVER_ORIGIN}/search?game_id=`;\n\nexport const searchGameById = (gameId) => {\n    return fetch(`${searchGameByIdUrl}${gameId}`).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to find the game');\n        }\n        return response.json();\n    })\n}\n\n// searchGameByName api\nexport const searchGameByName = (gameName) => {\n    return getGameDetails(gameName).then((data) => {\n        if (data && data.id) {\n            return searchGameById(data.id);\n        }\n\n        throw Error('Fail to find the game')\n    })\n}\n\n// favorite api\nconst favoriteItemUrl = `${SERVER_ORIGIN}/favorite`;\n\nexport const addFavoriteItem = (favItem) => {\n    return fetch(favoriteItemUrl, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({ favorite: favItem })\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to add favorite item');\n        }\n    })\n}\n\nexport const deleteFavoriteItem = (favItem) => {\n    return fetch(favoriteItemUrl, {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({ favorite: favItem })\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to delete favorite item');\n        }\n    })\n}\n\nexport const getFavoriteItem = () => {\n    return fetch(favoriteItemUrl, {\n        credentials: 'include',\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to get favorite item');\n        }\n\n        return response.json();\n    })\n}\n\n// `$` this is used for string connection.\nconst getRecommendedItemsUrl = `${SERVER_ORIGIN}/recommendation`;\n\nexport const getRecommendations = () => {\n    return fetch(getRecommendedItemsUrl, {\n        credentials: 'include',\n    }).then((response) => {\n        if (response.status !== 200) {\n            throw Error('Fail to get recommended item');\n        }\n\n        return response.json();\n    })\n}\n","import React, {Component} from 'react';\nimport { Modal, Button ,Form, Input, message} from 'antd';\nimport { login } from '../utils';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\n\n\nclass Login extends Component {\n    state = {\n        displayModel : false\n    }\n\n    render() {\n        const { displayModel } = this.state;\n        return (\n            <div>\n                <Button shape=\"round\"\n                        onClick={this.signinOnClick}\n                        style={{marginRight : 20 }}\n                >\n                    Login\n                </Button>\n                <Modal title=\"Log In\"\n                       visible={displayModel}\n                       onCancel={this.handleCancel}\n                       footer = {null}\n                       destroyOnClass = {true}\n                >\n\n                <Form\n                    name=\"normal_login\"\n                    onFinish={this.onFinish}\n                    preserve={false}\n                >\n                    <Form.Item\n                        name=\"user_id\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your Username!',\n                            },\n                        ]}\n                    >\n                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your Password!',\n                            },\n                        ]}\n                    >\n                        <Input\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Login</Button>\n                    </Form.Item>\n                </Form>\n                </Modal>\n            </div>\n        );\n    }\n\n    onFinish = (values) => {\n        // step1: collect username/password from the form\n        // step2: send data to the server\n        console.log('Received values of form: ', values);\n        login(values)\n            .then( res => {\n            console.log(res)\n                // close the modal\n                this.setState({displayModel : false})\n                // inform App.js login status\n                this.props.onSuccess();\n                message.success(`Welcome, ${res.name}`)\n        })\n            .catch(err => {\n                message.error(err.message)\n            })\n\n    };\n\n    signinOnClick = () => {\n        // displayModel => true\n        this.setState({displayModel : true})\n    }\n\n    handleCancel = () => {\n        // displayModel => false\n        this.setState({displayModel : false})\n    }\n}\n\nexport default Login;","import React, {Component} from 'react';\nimport {Modal, Button, Form, Input, message} from 'antd';\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\nimport {register} from \"../utils\";\n\nclass Register extends Component {\n    state = {\n        displayModal : false\n    }\n    render() {\n        const {displayModel} = this.state;\n        return (\n            <div>\n                <Button shape=\"round\"\n                        type = \"primary\"\n                        onClick={this.signupOnClick}\n                        style={{marginRight: 20}}\n                >\n                    Register\n                </Button>\n                <Modal title=\"Register\"\n                       visible={displayModel}\n                       onCancel={this.handleCancel}\n                       footer={null}\n                       destroyOnClass={true}\n                >\n\n                    <Form\n                        name=\"normal_register\"\n                        onFinish={this.onFinish}\n                        preserve={false}\n                    >\n                        <Form.Item\n                            name=\"user_id\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your Username!',\n                                },\n                            ]}\n                        >\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"Username\"/>\n                        </Form.Item>\n                        <Form.Item\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your Password!',\n                                },\n                            ]}\n                        >\n                            <Input\n                                prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n                                type=\"password\"\n                                placeholder=\"Password\"\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"first_name\"\n                            rules={[{ required: true, message: 'Please input your Firstname!' }]}\n                        >\n                            <Input\n                                placeholder=\"firstname\"\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"last_name\"\n                            rules={[{ required: true, message: 'Please input your Lastname!' }]}\n                        >\n                            <Input\n                                placeholder=\"lastname\"\n                            />\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Login</Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n\n    signupOnClick = () => {\n        // displayModel => true\n        this.setState({displayModel: true})\n    }\n\n    handleCancel = () => {\n        // displayModel => false\n        this.setState({displayModel: false})\n    }\n\n    onFinish = (values) => {\n        // step1: collect username/password/firstname/lastname from the form\n        // step2: send data to the server\n        console.log('Received values of form: ', values);\n        register(values)\n            .then( res => {\n                console.log(res)\n                // close the modal\n                this.setState({displayModel : false})\n                message.success('Register successfully!')\n            })\n            .catch(err => {\n                message.error(err.message)\n            })\n    };\n\n}\n\nexport default Register;","import React, {Component} from 'react';\nimport {Menu, Button, Drawer} from 'antd';\nimport {EyeOutlined, YoutubeOutlined, VideoCameraOutlined, StarFilled} from '@ant-design/icons';\n\nconst {SubMenu} = Menu;\nconst MenuKey = {\n    Streams: 'streams',\n    Videos: 'videos',\n    Clips: 'clips'\n}\n\nclass Favorites extends Component {\n    state = {\n        displayDrawer: false\n    }\n\n    onDrawerClose = () => {\n        this.setState({\n            displayDrawer: false,\n        })\n    }\n\n    onFavoriteClick = () => {\n        this.setState({\n            displayDrawer: true,\n        })\n    }\n\n    render() {\n        const { VIDEO, STREAM, CLIP } = this.props.data;\n        return (\n            <div>\n                <Button type=\"primary\" shape=\"round\" onClick={this.onFavoriteClick} icon={<StarFilled/>}>\n                    My Favorites</Button>\n                <Drawer\n                    title=\"My Favorites\"\n                    placement=\"right\"\n                    width={720}\n                    visible={this.state.displayDrawer}\n                    onClose={this.onDrawerClose}\n                >\n                    <Menu\n                        mode=\"inline\"\n                        defaultOpenKeys={[MenuKey.Streams]}\n                        style={{height: '100%', borderRight: 0}}\n                        selectable={false}\n                    >\n                        <SubMenu key={MenuKey.Streams} icon={<EyeOutlined/>} title=\"Streams\">\n                            {\n                                STREAM.map((item) => {\n                                    return (\n                                        <Menu.Item key={item.id}>\n                                            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                {`${item.broadcaster_name} - ${item.title}`}\n                                            </a>\n                                        </Menu.Item>\n                                    )\n                                })\n                            }\n                        </SubMenu>\n                        <SubMenu key={MenuKey.Videos} icon={<YoutubeOutlined/>} title=\"Videos\">\n                            {\n                                VIDEO.map((item) => {\n                                    return (\n                                        <Menu.Item key={item.id}>\n                                            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                {`${item.broadcaster_name} - ${item.title}`}\n                                            </a>\n                                        </Menu.Item>\n                                    )\n                                })\n                            }\n                        </SubMenu>\n                        <SubMenu key={MenuKey.Clips} icon={<VideoCameraOutlined/>} title=\"Clips\">\n                            {\n                                CLIP.map((item) => {\n                                    return (\n                                        <Menu.Item key={item.id}>\n                                            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                {`${item.broadcaster_name} - ${item.title}`}\n                                            </a>\n                                        </Menu.Item>\n                                    )\n                                })\n                            }\n                        </SubMenu>\n                    </Menu>\n                </Drawer>\n\n            </div>\n        );\n    }\n}\n\nexport default Favorites;","import React, {Component} from 'react';\nimport { Button, Form, Input, message, Modal } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { searchGameByName} from \"../utils\";\n\nclass CustomSearch extends Component {\n    state = {\n        displayModal: false\n    }\n\n    searchOnClick = () => {\n        this.setState({\n            displayModal: true,\n        })\n    }\n\n    onSubmit = (data) => {\n        searchGameByName(data.game_name)\n            .then((data) => {\n                this.setState({\n                    displayModal: false,\n                })\n                this.props.onSuccess(data);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n    }\n\n    handleCancel = () => {\n        this.setState({\n            displayModal: false,\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <Button shape=\"round\" onClick={this.searchOnClick} icon={<SearchOutlined />} style={{ marginLeft: '20px', marginTop: '20px'}}>\n                    Custom Search </Button>\n                <Modal\n                    title=\"Search\"\n                    visible={this.state.displayModal}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                >\n                    <Form\n                        name=\"custom_search\"\n                        onFinish={this.onSubmit}\n                    >\n                        <Form.Item\n                            name=\"game_name\"\n                            rules={[{ required: true, message: 'Please enter a game name' }]}\n                        >\n                            <Input placeholder=\"Game name\" />\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Search</Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default CustomSearch;","import React from 'react';\nimport { Button, Card, List, message, Tabs, Tooltip } from 'antd';\nimport { StarOutlined, StarFilled } from '@ant-design/icons';\nimport { addFavoriteItem, deleteFavoriteItem } from '../utils';\n\nconst { TabPane } = Tabs;\nconst tabKeys = {\n    Streams: 'stream',\n    Videos: 'videos',\n    Clips: 'clips',\n}\n\nconst processUrl = (url) => url\n    .replace('%{height}', '252')\n    .replace('%{width}', '480')\n    .replace('{height}', '252')\n    .replace('{width}', '480');\n\nconst renderCardTitle = (item, loggedIn, favs, favOnChange) => {\n    const title = `${item.broadcaster_name} - ${item.title}`;\n\n    const isFav = favs.find((fav) => fav.id === item.id);\n\n    const favOnClick = () => {\n        if (isFav) {\n            deleteFavoriteItem(item).then(() => {\n                favOnChange();\n            }).catch(err => {\n                message.error(err.message)\n            })\n\n            return;\n        }\n\n        addFavoriteItem(item).then(() => {\n            favOnChange();\n        }).catch(err => {\n            message.error(err.message)\n        })\n    }\n\n    return (\n        <>\n            {\n                loggedIn &&\n                <Tooltip title={isFav ? \"Remove from favorite list\" : \"Add to favorite list\"}>\n                    <Button shape=\"circle\" icon={isFav ? <StarFilled /> : <StarOutlined />} onClick={favOnClick} />\n                </Tooltip>\n            }\n            <div style={{ overflow: 'hidden', textOverflow: 'ellipsis', width: 450 }}>\n                <Tooltip title={title}>\n                    <span>{title}</span>\n                </Tooltip>\n            </div>\n        </>\n    )\n}\n\nconst renderCardGrid = (data, loggedIn, favs, favOnChange) => {\n    return (\n        <List\n            grid={{\n                xs: 1,\n                sm: 2,\n                md: 4,\n                lg: 4,\n                xl: 6,\n            }}\n            dataSource={data}\n            renderItem={item => (\n                <List.Item style={{ marginRight: '20px' }}>\n                    <Card\n                        title={renderCardTitle(item, loggedIn, favs, favOnChange)}\n                    >\n                        <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                            <img\n                                alt=\"Placeholder\"\n                                src={processUrl(item.thumbnail_url)}\n                            />\n                        </a>\n                    </Card>\n                </List.Item>\n            )}\n        />\n    )\n}\n\nconst Home = ({ resources, loggedIn, favoriteItems, favoriteOnChange }) => {\n    const { VIDEO, STREAM, CLIP } = resources;\n    const { VIDEO: favVideos, STREAM: favStreams, CLIP: favClips} = favoriteItems;\n\n    return (\n        <Tabs\n            defaultActiveKey={tabKeys.Streams}\n        >\n            <TabPane tab=\"Streams\" key={tabKeys.Streams} style={{ height: '680px', overflow: 'auto' }} forceRender={true}>\n                {renderCardGrid(STREAM, loggedIn, favStreams, favoriteOnChange)}\n            </TabPane>\n            <TabPane tab=\"Videos\" key={tabKeys.Videos} style={{ height: '680px', overflow: 'auto' }} forceRender={true}>\n                {renderCardGrid(VIDEO, loggedIn, favVideos, favoriteOnChange)}\n            </TabPane>\n            <TabPane tab=\"Clips\" key={tabKeys.Clips} style={{ height: '680px', overflow: 'auto' }} forceRender={true}>\n                {renderCardGrid(CLIP, loggedIn, favClips, favoriteOnChange)}\n            </TabPane>\n        </Tabs>\n    );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Button, Col, Layout, Menu, message, Row } from 'antd';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport { getFavoriteItem, getRecommendations, getTopGames, logout, searchGameById } from './utils';\nimport Favorites from './components/Favorites';\nimport { LikeOutlined, FireOutlined } from '@ant-design/icons';\nimport CustomSearch from './components/CustomSearch';\nimport Home from './components/Home';\n\n\nconst {SubMenu} = Menu;\nconst {Header, Sider, Content} = Layout;\n\nclass App extends React.Component {\n\n    state = {\n        loggedIn: false,\n        topGames : [],\n        resources: {\n            VIDEO: [],\n            STREAM: [],\n            CLIP: [],\n        },\n        favoriteItems: {\n            VIDEO: [],\n            STREAM: [],\n            CLIP: [],\n        },\n    }\n\n    componentDidMount = () => {\n        getTopGames()\n            .then((data) => {\n                this.setState({\n                    topGames: data\n                })\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n    }\n\n    render() {\n        const {loggedIn} = this.state;\n        return (\n            <Layout>\n                <Header>\n                    <Row justify = \"space-between\">\n                        <Col>\n                            {\n                                loggedIn && <Favorites data={this.state.favoriteItems} />\n                            }\n                        </Col>\n                        <Col>\n                            {\n                                this.state.loggedIn ?\n                                    <Button shape=\"round\" onClick={this.signoutOnClick}>\n                                        Logout</Button> :\n                                    (\n                                        <div style={{display: \"flex\"}}>\n                                            <Login onSuccess={this.signinOnSuccess} />\n                                            <Register />\n                                        </div>\n                                    )\n                            }\n                        </Col>\n                    </Row>\n\n                    <Login onSuccess={this.signinOnSuccess}/>\n                </Header>\n                <Layout>\n                    <Sider width={300}\n                           className=\"site-layout-background\">\n                        <CustomSearch onSuccess={this.customSearchOnSuccess} />\n                        <Menu\n                            mode=\"inline\"\n                            onSelect={this.onGameSelect}\n                            style={{ marginTop: '10px' }}\n                        >\n                            <Menu.Item icon={<LikeOutlined />} key=\"Recommendation\">\n                                Recommend for you!</Menu.Item>\n                            <SubMenu icon={<FireOutlined />} key=\"Popular Games\" title=\"Popular Games\" className=\"site-top-game-list\">\n                                {\n                                    this.state.topGames.map((game) => {\n                                        return (\n                                            <Menu.Item key={game.id} style={{ height: '50px' }}>\n                                                <img\n                                                    alt=\"Placeholder\"\n                                                    src={game.box_art_url.replace('{height}', '40').replace('{width}', '40')}\n                                                    style={{ borderRadius: '50%', marginRight: '20px' }}\n                                                />\n                                                <span>\n                        {game.name}\n                      </span>\n                                            </Menu.Item>\n                                        )\n                                    })\n                                }\n                            </SubMenu>\n                        </Menu>\n                    </Sider>\n                    <Layout style={{padding: 24}}>\n                        <Content className=\"site-layout-background\"\n                                 style={{\n                                     padding: 24,\n                                     margin: 0,\n                                     height: 800,\n                                     overflow: 'auto'\n                                 }}\n                        >\n                            <Home\n                                resources={this.state.resources}\n                                loggedIn={this.state.loggedIn}\n                                favoriteItems={this.state.favoriteItems}\n                                favoriteOnChange={this.favoriteOnChange}\n                            />\n                        </Content>\n                    </Layout>\n                </Layout>\n            </Layout>\n        )\n    }\n\n\n    signinOnSuccess = () => {\n        getFavoriteItem().then((data) => {\n            this.setState({\n                favoriteItems: data,\n                loggedIn: true\n            })\n        }).catch((err) => {\n            message.error(err.message);\n        })\n    }\n\n    customSearchOnSuccess = (data) => {\n        this.setState({\n            resources: data,\n        })\n    }\n\n    onGameSelect = ({ key }) => {\n        if (key === 'Recommendation') {\n            getRecommendations().then((data) => {\n                this.setState({\n                    resources: data,\n                })\n            })\n\n            return;\n        }\n\n        searchGameById(key).then((data) => {\n            this.setState({\n                resources: data,\n            })\n        })\n    }\n\n    favoriteOnChange = () => {\n        console.log(1)\n        getFavoriteItem().then((data) => {\n            this.setState({\n                favoriteItems: data,\n                loggedIn: true\n            })\n        }).catch((err) => {\n            message.error(err.message);\n        })\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}